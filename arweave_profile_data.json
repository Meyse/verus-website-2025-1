{
    "iEXZ3nd4K9fmGDSiQ8J6XLATzUUSKp1eAz" : {
      "qualifiedname":"vrsc::system.identity.profile.public",
      "iP9hXXzqYXQhnY9EXikYjqraGBCrvaysAe": {
        "qualifiedname":"vrsc::system.identity.profile.header",
        "notes": "This is optional, background image for header.",
        "image": "https://cragslist.hopto.org/static/profile_content/header.jpg"
      },
      "iMMRVtGBNkr7V2hUNd4LLFiPQyzGrxAhx1": {
        "qualifiedname":"vrsc::system.identity.profile.avatar",
        "notes": "This is optional, display an avatar for profile...",
        "image": "https://cragslist.hopto.org/static/profile_content/avatar.jpg"
      },
      "iAvXhoTu7EtDcGiUsyd1BysHMo1bTNDrTd": {
        "qualifiedname":"vrsc::system.identity.profile.about",
        "text": "VerusID profile for Cragorn@"
      },
      "i3X9irKQDqHNtYxfwEzECPHRV1RzzGnkHf": {
        "qualifiedname":"vrsc::system.services.website",
        "name": "Cragslist (VerusID lookup site)",
        "i9TbCypmPKRpKPZDjk3YcCEZXK6wmPTXjw":"https://cragslist.hopto.org"
      },
      "iRjhBnikFiZummQRxbtP3FexLemVoxzgWa": {
        "qualifiedname":"vrsc::system.keys.vrsc.identity",
        "address":"Crag@",
        "i9TbCypmPKRpKPZDjk3YcCEZXK6wmPTXjw":"i9TbCypmPKRpKPZDjk3YcCEZXK6wmPTXjw 1: controller of VerusID \"Cragorn@\" controls VerusID \"Crag@\":AfHLGgABQSDTuxg1eMebL9b3zz+rZz8+3qseAlEDLTTxabR554z3rCPdmnE/WThYpBE0yU0XD0A4FKbQHwr0eLpQEremnAUg:AQzMGgABQSDqkbjRADm4MvPq/lVbIFlTk8ajLjogdhJwOfuXGlQRow0GFNOK7gYu8jzyg5J6Xdg0wbscnx1FmYFHqy5spd5f"
      },
      "iCS9VrxGjNsHUhrVqkV17Ws66cmg5rZecV": {
        "qualifiedname":"vrsc::system.collections.arweave",
        "content1name": "vrsc::system.collections.content.arweave.post",
        "content2name": "vrsc::system.collections.content.arweave.image",
        "content": [
            "iS33Fgd1Y7H6vVoNMWJxM9gCi6drsSRQVp",
            "iApfYRGU8SkcVK3sDAJfATQ64smkmKCscW"
        ]
      },
      "iSYgqLigKLF62dLypvQV4pCCanJyqyRQ2F": {
        "qualifiedname":"vrsc::system.collections.content",
        "content": [
            {"vdxfkey":"iS33Fgd1Y7H6vVoNMWJxM9gCi6drsSRQVp", "qualifiedname":"vrsc::system.collections.content.arweave.post", "txid":"wf2RZtFH7DCg7DuJtUvv9pYXO60LJJ04474_HIn9jQU", "title":"", "date":""},
            {"vdxfkey": "iSbxi18bWUYMnMmFKpgZAZgu62uv7WEC4e", "qualifiedname":"vrsc::system.collections.content.web.text", "html": true, "text": "<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/LmJKZkhYEtI\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>"}
        ]
      }
    }
}